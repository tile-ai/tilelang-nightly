name: Nightly-Release

on:
  workflow_dispatch:
    inputs:
      repo:
        description: "Repository"
        default: "tile-ai/tilelang"
      branch:
        description: "Branch"
        default: "main"
  schedule:
    - cron: '0 19 * * *'

env:
  FORCE_COLOR: 1

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }} for CUDA ${{ matrix.cuda-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [self-hosted]
        cuda-version: ["12.1", "11.8"]
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set default values
        id: set_defaults
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "REPO=${{ inputs.repo }}" >> $GITHUB_ENV
            echo "BRANCH=${{ inputs.branch }}" >> $GITHUB_ENV
          else
            echo "REPO=tile-ai/tilelang" >> $GITHUB_ENV
            echo "BRANCH=main" >> $GITHUB_ENV
          fi

      - name: Clone and prepare source
        run: |
          git clone -b ${{ env.BRANCH }} --recursive https://github.com/${{ env.REPO }}
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: | 
          cd tilelang
          cibuildwheel --output-dir ../wheelhouse
        env:
          CUDA_VERSION: ${{ matrix.cuda-version }}
          CIBW_SKIP: "cp3??t-* *musllinux*"

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-cuda-${{ matrix.cuda-version }}
          path: wheelhouse/*.whl

      - name: Verify wheel compatibility
        run: |
          echo "üîç Verifying manylinux_2_27 compatibility..."
          for wheel in wheelhouse/*.whl; do
            if [[ -f "$wheel" ]]; then
              echo "Checking: $(basename "$wheel")"
              python -m wheel tags "$wheel" || echo "  ‚ö†Ô∏è  Could not read wheel tags"
            fi
          done

  merge-wheels:
    name: Merge all wheel artifacts
    needs: build-wheels
    runs-on: ubuntu-latest
    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-wheels/
          pattern: wheels-*
          merge-multiple: true
          
      - name: List built wheels
        run: |
          echo "üéâ All wheels built successfully:"
          ls -la all-wheels/
          echo "Total wheels: $(find all-wheels -name '*.whl' | wc -l)"
          echo ""
          echo "Wheel details:"
          for wheel in all-wheels/*.whl; do
            if [[ -f "$wheel" ]]; then
              echo "  üì¶ $(basename "$wheel")"
            fi
          done
          
      - name: Upload merged wheels
        uses: actions/upload-artifact@v4
        with:
          name: all-wheels
          path: all-wheels/*.whl

  release:
    needs: [build-wheels, merge-wheels]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: all-wheels
          path: dist/
          
      - name: Prepare release
        run: |
          # Get version from first wheel filename
          version=$(python3 get_verison.py | tee version)
          echo "TAG_VERSION=$version" >> $GITHUB_ENV
          echo "üè∑Ô∏è  Release version: $version"
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_VERSION }}
          files: dist/*
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          body: |
            üöÄ **TileLang Nightly Build** - ${{ env.TAG_VERSION }}
          
      - name: Update wheel index
        run: |
          git clone https://github.com/tile-ai/whl.git tilelang-whl
          python3 update_whl_index.py
          
      - name: Push wheel index
        run: |
          cd tilelang-whl
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "üì¶ Update nightly wheels for ${{ env.TAG_VERSION }}"
            git push https://github-actions[bot]:${{ secrets.WHL_TOKEN }}@github.com/tile-ai/whl.git main
          fi
        env:
          WHL_TOKEN: ${{ secrets.WHL_TOKEN }}
